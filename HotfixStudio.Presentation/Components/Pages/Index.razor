@page "/"
@using HotfixStudio.Infrastructure.PresentationData
@using HotfixStudio.Presentation.Components.BaseElements

<div class="index">
    <StackingContext>
        <BaseSelect @bind-Values="values" T="int" Multiselect="false" GetOptionsAsync="GetOptionsAsync" />


    </StackingContext>

</div>

@code {

    List<int> values = new() { 1 };

    async Task<OptionResult<int>> GetOptionsAsync(OptionSearch<int> optionSearch)
    {
        await Task.Delay(2000, optionSearch.CancellationToken);

        var result = new OptionResult<int>();
        result.Options.Add(0, "Banana");
        result.Options.Add(1, "Apple");
        result.Options.Add(2, "Orange Orange Orange OrangeOrange OrangeOrange Orange Orange OrangeOrange OrangeOrangeOrange");
        result.Options.Add(3, "Mango");
        result.Options.Add(4, "Pineapple");

        if (!string.IsNullOrWhiteSpace(optionSearch.Search))
        {
            result.Options = result.Options.Where(v => v.Value.Contains(optionSearch.Search, StringComparison.OrdinalIgnoreCase)).ToDictionary<int, string>();
        }

        result.TotalRows = result.Options.Count;
        return result;
    }

}

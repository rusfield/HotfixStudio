@using HotfixStudio.Presentation.ComponentModels

<div class="main-menu-component">
    @for(int i = 0; i < MenuObjects.Count; i++)
    {
        int index = i;
        <div class="label" @onmouseenter="(() => OpenMenu(index))" @onmouseleave="(() => MouseOut(index))">
            <div class="icon">
                <IconButton Base64IconString="@MenuObjects[i].Base64IconString" />
            </div>
            @if (hoverIndex == index)
            {
                <div class="abs-pos">
                    <PopupMenu Label="@MenuObjects[i].Header" Sections="@MenuObjects[index].Sections" />
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public bool MenuOpen { get; set; }

    [Parameter]
    public EventCallback<bool> MenuOpenChanged { get; set; }

    [Parameter]
    public List<MenuObject> MenuObjects { get; set; }

    int hoverIndex = -1;

    void MouseOut(int index)
    {
        if(hoverIndex == index)
        {
            hoverIndex = -1;
            MenuOpen = false;
            MenuOpenChanged.InvokeAsync(MenuOpen);
        }
    }

    void OpenMenu(int index)
    {
        hoverIndex = index;
        MenuOpen = true;
        MenuOpenChanged.InvokeAsync(MenuOpen);
    }

    public void Close()
    {
        hoverIndex = -1;
        MenuOpen = false;
        MenuOpenChanged.InvokeAsync(MenuOpen);
    }
}

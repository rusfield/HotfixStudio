<div class="stacking-context-component">
    <CascadingValue Value="@this">
        @ChildContent
    </CascadingValue>
    <div class="overlay @GetOverlayVisibilityClass()" />
    <div class="underlay" @onclick="@UnderlayClick" />
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    EventCallback blurElementEventCallback;
    int blurTimeMs = 0;

    bool overlayVisible = false;

    string GetOverlayVisibilityClass()
    {
        return overlayVisible ? "visible" : "invisible";
    }

    void UnderlayClick()
    {
        blurElementEventCallback.InvokeAsync();
        blurElementEventCallback = EventCallback.Empty;
        blurTimeMs = 0;
        if (overlayVisible)
        {
            overlayVisible = false;
            this.StateHasChanged();
        }
    }

    public int DisplayOverlay(EventCallback blurElementEventCallback, int blurTimeMs = 0)
    {
        if (!overlayVisible)
        {
            overlayVisible = true;
            this.StateHasChanged();
        }
        else
        {
            this.blurElementEventCallback.InvokeAsync();
        }
        this.blurElementEventCallback = blurElementEventCallback;
        int oldUnfocusTimeMs = this.blurTimeMs;
        this.blurTimeMs = blurTimeMs;
        return oldUnfocusTimeMs;
    }

    public void HideOverlay()
    {
        if (overlayVisible)
        {
            overlayVisible = false;
            this.StateHasChanged();
        }
    }
}

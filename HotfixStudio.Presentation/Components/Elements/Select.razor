@using HotfixStudio.Presentation.Components.BaseElements

@typeparam T

<div class="select-component @GetStatusClassString()" @onmouseenter="(() => isHovering = true)" @onmouseleave="(() => isHovering = false)">
    <BaseInput T="string" OnFocus="OnInputBaseFocus" OnInputChanged="OnInputChanged" Status="GetStatusClass()" />
    <div class="select-dropdown">
    </div>
</div>

@code {
    [CascadingParameter]
    public StackingContext StackingContext { get; set; }

    bool isFocused = false;
    bool isHovering = false;

    bool readyToOpen = false;

    async void OnInputBaseFocus()
    {
        if (!isFocused)
        {
            readyToOpen = false;
            isFocused = true;
            var delay = StackingContext.DisplayOverlay(EventCallback.Factory.Create(this, Close), 200);
            await Task.Delay(delay);
            readyToOpen = true;
            this.StateHasChanged();
        }
    }

    void Close()
    {
        isFocused = false;
    }

    void OnInputChanged(string input)
    {

    }

    string GetStatusClassString()
    {
        if (readyToOpen)
        {
            var statusClass = GetStatusClass();
            return statusClass == ElementStatus.NONE ? "" : statusClass.ToString().ToLower();
        }
        return "";
    }

    ElementStatus GetStatusClass()
    {
        if (isFocused)
            return ElementStatus.FOCUS;
        else if (isHovering)
            return ElementStatus.HOVER;
        else
            return ElementStatus.NONE;
    }
}

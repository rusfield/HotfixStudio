@using HotfixStudio.Infrastructure.PresentationData
@using HotfixStudio.Presentation.ComponentModels
@using HotfixStudio.Presentation.Components.BaseElements

<div class="base-index-component">

    <div class="base-index-container-row">
        <div class="base-index-sidebar" style="@($"min-width:{sidebarWidth}px;")">
            <div class="base-index-sidebar-column">
                <div class="logo">
                    Logo
                </div>
                <MainMenu MenuObjects="menuObjects" />
            </div>
            <BaseDragBar @bind-Size="sidebarWidth" Type="DragBarType.VERTICAL_RIGHT" />
        </div>
        <div class="base-index-content" style="@($"width:calc(100% - {sidebarWidth}px);")">
            <MainTabs @bind-Tabs="tabs" @bind-CurrentTab="currentTab" />
        </div>

    </div>
    <div class="base-index-footer" style="@($"height:{footerHeight}px;")">
        <BaseDragBar @bind-Size="footerHeight" Type="DragBarType.HORIZONTAL_TOP" />
    </div>

</div>

@code {
    List<PageTab> tabs = new();
    PageTab? currentTab;

    double sidebarWidth = 160;
    double footerHeight = 30;

    List<MenuObject> menuObjects = new();

    protected override void OnInitialized()
    {
        var testCallback = EventCallback.Factory.Create(this, AddTab);

        for(int i = 0; i < 5; i++)
        {
            Dictionary<string, EventCallback> dashboardSection = new();
            dashboardSection.Add("Dashboard", testCallback);

            Dictionary<string, EventCallback> newSection = new();
            newSection.Add("Search by ID", testCallback);
            newSection.Add("Search by Name", testCallback);

            menuObjects.Add(new()
                {
                    Header = "Creatures",
                    IconName = "home"
                });
            menuObjects[i].AddSection(dashboardSection);
            menuObjects[i].AddSection(newSection);
        }

        base.OnInitialized();
    }

    void AddTab()
    {
        tabs.Add(new()
            {
                Label = "Title " + (tabs.Count + 1),
                PageComponent = typeof(TestPage)
            });
    }
}

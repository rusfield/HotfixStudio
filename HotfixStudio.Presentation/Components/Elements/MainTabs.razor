@using HotfixStudio.Infrastructure.PresentationData

<div class="tabs-component">
    <div class="tabs-container">
        @foreach (var tab in Tabs)
        {
            <div class="tabs-cell @GetTabClass(tab)" @onclick="(() => ChangeTab(tab))" @key="tab">
                <span>
                    @tab.Label
                </span>
                @if (tab.IsClosable)
                {
                    <div class="close-test" @onclick="(() => CloseTab(tab))">
                        X
                    </div>
                }
            </div>
        }
    </div>

</div>

@code {
    [Parameter]
    public List<PageTab> Tabs { get; set; }

    [Parameter]
    public EventCallback<List<PageTab>> TabsChanged { get; set; }

    [Parameter]
    public PageTab CurrentTab { get; set; }

    [Parameter]
    public EventCallback<PageTab> CurrentTabChanged { get; set; }

    PageTab? closingTab;

    void ChangeTab(PageTab tab)
    {
        if (CurrentTab != tab)
        {
            CurrentTab = tab;
            CurrentTabChanged.InvokeAsync(CurrentTab);
        }
    }

    async Task CloseTab(PageTab tab)
    {
        closingTab = tab;
        this.StateHasChanged();
        await Task.Delay(200);
        Tabs.Remove(tab);
        CurrentTab = Tabs.FirstOrDefault();
    }

    string GetTabClass(PageTab tab)
    {
        if (closingTab == tab)
            return "closing";
        else if (CurrentTab == tab)
            return "open active";
        else
            return "open";
    }
}